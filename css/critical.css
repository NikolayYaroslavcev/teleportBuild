@charset "UTF-8";
/* Семейство шрифта брать из ./dev/scss/fonts.scss */
.header {
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  left: 0;
  width: 100%;
  background: #fff;
  border-bottom: 1px solid #000;
  z-index: 10;
}
.header-container {
  display: flex;
  align-items: center;
}
.header-burger {
  position: relative;
  width: 18px;
  height: 10px;
}
@media screen and (min-width: 1025px) {
  .header-burger {
    display: none;
  }
}
.header-burger span {
  position: absolute;
  background: #000;
  width: 100%;
  height: 1px;
  pointer-events: none;
  transition: all 0.3s ease-in-out;
  border-radius: 2px;
}
.header-burger span:nth-child(1), .header-burger span:nth-child(3) {
  left: 50%;
  transform: translateX(-50%);
}
.header-burger span:nth-child(1) {
  top: 0;
}
.header-burger span:nth-child(2) {
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  opacity: 1;
}
.header-burger span:nth-child(3) {
  bottom: 0;
}
.header-burger._active span:nth-child(1) {
  top: 50%;
  transform: translate(-50%, -50%) rotate(45deg);
}
.header-burger._active span:nth-child(2) {
  right: -150%;
  opacity: 0;
}
.header-burger._active span:nth-child(3) {
  bottom: 50%;
  transform: translate(-50%, 50%) rotate(-45deg);
}
@media screen and (max-width: 1024px) {
  .header-dropdown {
    position: absolute;
    left: 100%;
    top: 100%;
    min-width: 320px;
    min-height: calc(var(--viewport-height) - var(--header-height));
    max-height: 100%;
    overflow: auto;
    display: block;
    padding: 20px;
    background: #fff;
    transition: transform 0.3s ease-in-out;
  }
}
.header-dropdown._active {
  transform: translateX(-100%);
}

.bx-breadcrumb {
  display: flex;
  flex-wrap: wrap;
}
.bx-breadcrumb-item {
  font-size: 0.75rem;
  line-height: 119%;
  color: #000;
  white-space: nowrap;
}
.bx-breadcrumb-item:not(:last-child)::after {
  content: ">";
  margin: 0 8px;
}
.bx-breadcrumb-item > span {
  color: #000;
}
.bx-breadcrumb-item a {
  color: inherit;
}
.bx-breadcrumb-item a span {
  color: inherit;
}
@media screen and (hover: hover) {
  .bx-breadcrumb-item a:hover {
    color: #e3000f;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
